# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/144Y74ZkzBSPRBLLmozbVXOEF-LxtEkux
"""

from sqlalchemy import create_engine
from sqlalchemy import text
my_conn = create_engine("sqlite:////content/my_db.db")

conn = my_conn.connect()

# Importer les modules nécessaires
from sqlalchemy import create_engine, text
import pandas as pd

# Créer un engine pour une base de données SQLite située dans "/content/my_db.db"
engine = create_engine("sqlite:////content/my_db.db")

# Établir une connexion à la base de données
conn = engine.connect()

# Exécuter la requête et récupérer les résultats
result_set = conn.execute(text("SELECT name FROM sqlite_master WHERE type='table'"))

# Afficher les noms des tables
for row in result_set:
    print(row[0])

#print(engine.sqlite_master())

# Établir une connexion à la base de données
conn = engine.connect()

# TO DO: Écrire une requête pour extraire toutes les données de la table "student"
query = text("SELECT * FROM student")

# Exécuter la requête et récupérer les résultats
result_set = conn.execute(query)

# TO DO: Afficher les données récupérées sous forme de dataframe pandas
df = pd.DataFrame(result_set.fetchall(),columns=result_set.keys())
df

# TO DO : Ecrire une requête pour extraire tous les étudiants de la classe 'Four'
result_set = conn.execute(text("SELECT * FROM student WHERE class = 'Four'"))
# Afficher les résultats
for row in result_set:
    print(row)
     
     
# TO DO : Sélectionner les enregistrements en fonction d'une classe particulière
q="SELECT * FROM student WHERE class = 'Five'"
my_cursor=conn.execute(text(q)) 
data_row=my_cursor.fetchall()
# TO DO : afficher le type de données renvoyé et le nombre d'enregistrements
print(type(data_row))
print(len(data_row))
     

# TO DO : sélectionner un enregistrement de la table 'student' dans la base de données où la colonne ID est égale à 8
q = "SELECT * FROM student WHERE ID = 8"
# Cette ligne exécute la requête et renvoie un objet curseur
my_cursor = conn.execute(text(q))
data_row = my_cursor.fetchone()
# TO DO Cette ligne affiche les valeurs de la colonne ID, de la colonne Name et de la colonne Mark du tuple extrait précédemment
print(data_row[0], data_row[1], data_row[3])
     

# TO DO : sélectionner les 10 premiers enregistrements de la table 'student' dans la base de données
q = "SELECT * FROM student LIMIT 10"
# Cette ligne exécute la requête et renvoie un objet curseur
my_cursor = conn.execute(text(q))
# Cette ligne extrait toutes les lignes de résultat du curseur sous forme de liste de tuples
data_row = my_cursor.fetchall()
# TO DO afficher le type de l'objet retourné (dans ce cas, une liste de tuples)
print(type(data_row))
# TO DO affiche le nombre d'enregistrements dans la liste
print(len(data_row))
# Cette boucle parcourt la liste d'enregistrements et affiche chaque tuple
for row in data_row:
    print(row)